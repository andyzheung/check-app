server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # 健康检查端点
    location /health {
        access_log off;
        return 200 '{"status":"ok","timestamp":"$time_iso8601"}\n';
        add_header Content-Type application/json;
    }

    # 就绪检查端点
    location /ready {
        access_log off;
        try_files /health.json =503;
        add_header Content-Type application/json;
    }

    # API代理到后端服务
    location /api/ {
        # 代理到check-app-server服务
        proxy_pass http://check-app-server:8080/api/;
        
        # 代理头设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 缓冲设置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # 禁用API缓存
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma no-cache;
        add_header Expires 0;
    }

    # 二维码静态资源代理到后端服务
    location /qrcode/ {
        # 代理到check-app-server服务的静态资源
        proxy_pass http://check-app-server:8080/qrcode/;
        
        # 代理头设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 静态资源缓存策略
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # 安全头
        add_header X-Content-Type-Options nosniff;
    }

    # 上传文件静态资源代理到后端服务
    location /uploads/ {
        # 代理到check-app-server服务的静态资源
        proxy_pass http://check-app-server:8080/uploads/;
        
        # 代理头设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 静态资源缓存策略
        expires 7d;
        add_header Cache-Control "public";
        add_header Vary Accept-Encoding;
        
        # 安全头
        add_header X-Content-Type-Options nosniff;
    }

    # 静态资源缓存策略
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # 开启gzip
        gzip_static on;
        
        # 安全头
        add_header X-Content-Type-Options nosniff;
    }

    # HTML文件不缓存
    location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma no-cache;
    }

    # Vue.js SPA路由支持
    location / {
        try_files $uri $uri/ /index.html;
        
        # 添加安全头
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
    }

    # 禁止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 禁止访问备份文件
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 错误页面
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
} 